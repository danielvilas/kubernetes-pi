# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: grafana-pvc
#   namespace: kube-system
#   labels:
#     k8s-app: grafana
# spec:
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: local-path
#   resources:
#     requests:
#       storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: grafana
  name: grafana-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: grafana
  template:
    metadata:
      labels:
        k8s-app: grafana
    spec:
      volumes:
      - name: grafana-pv
        emptyDir: {}
      containers:
      - name: grafana
        image: grafana/grafana-arm32v7-linux:6.2.5
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 2500Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GF_PATHS_DATA 
          value: /grafana-data/grafana
        volumeMounts:
        - mountPath: /grafana-data/
          name: grafana-pv
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  annotations:
      k8s-app: grafana
spec:
  type: ClusterIP 
  selector:
    k8s-app: grafana
  ports:
  - port: 3000
    targetPort: 3000
    name: grafana-port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ui
  annotations:
    kubernetes.io/ingress.class: traefik
    k8s-app: grafana
spec:
  rules:
  - host: grafana.apps.picluster
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: grafana-service
            port:
              number: 3000